mixin publication(bib)
  - let { author, title, volume, number, journal, booktitle, pages, year } = bib.entryTags
  - author = author.split(' and ').join('，')
  = author
  | , 
  = `“${title}”`
  if volume
    | , 
    = `Vol. ${volume}`
  if number
    | , 
    = `No. ${number}`
  if pages
    | , 
    = `pp. ${pages}`
  if booktitle
    | , 
    = booktitle
  if journal
    | , 
    = journal
  if year
    | , 
    = year

mixin publication-list(arr, type, heading)
  - let publicationArr
  if type
    - publicationArr = lodash.filter(arr, function(bib) { return bib.entryTags.type === type; });
  else
    - publicationArr = arr
  if publicationArr.length > 0
    if heading
      h3= heading
    .publication-list
      each publication in publicationArr
        .publication-item
          +publication(publication)

mixin page-title(title)
  h1.page-title
    = title

mixin breadcrumb-list(list)
  if list
    .wba-breadcrumb-list.hover-effect
      ul.list
        li.item
          a(href= rootPath || '/')
            | Home
        each item, index in list
          li.item
            a(href= item.href)
              = item.name

mixin template-option
  -
    templateOption = {
      interpolate: /\$\$\$([\s\S]+?)\$\$\$/g, // Markdownコマンド内でもテンプレートを書けるように "$$$ hoge $$$" のような記法を採用
    };

    params = {
      dataPath,
      imgPath,
      imageLink: (opts) => {
        const { src, alt } = opts;
        return `<span class="image-link"><img class="elm-img" src="${imgPath}${src}" alt="${alt}"></span>`;
      },
    };
